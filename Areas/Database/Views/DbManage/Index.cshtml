@* Để có thể sử dụng DB *@
@using Microsoft.EntityFrameworkCore 
@* Để làm việc với CSDL *@
@using System.Data


@inject AppDbContext dbContext;
@{
    ViewData["Title"] = "Thông tin Db";
    var connect = dbContext.Database.GetDbConnection();
    var dbname = connect.Database;
    // kiem tra xem kết nối này có thể kết nối đến CSDL được không
    var can_connect = dbContext.Database.CanConnect();
}

<partial name="_AlertMessage"/>

<h2>Thông tin</h2>
<p>- Database: @dbname</p>
<p>- Source: @connect.DataSource</p>
<p>- State: @connect.State</p>
<hr>
<h2>Migrations</h2>
@foreach(var migration in dbContext.Database.GetAppliedMigrations()) {
    <p>@migration</p>
}
@foreach(var migration in dbContext.Database.GetPendingMigrations()) {
    <p>@migration (pending)</p>
}
@if(!can_connect) {
    <p class="alert alert-danger">Không có khả năng kết nối đến Database</p>
}
@* Kiểm tra xem có Migrations ở trạng thái pendding (chưa cập nhật vào database CSDL), nếu có Any() trả về true --> Tạo nút bấm Tạo Database*@
@if(dbContext.Database.GetPendingMigrations().Any()) {
    <form method="post">
        <button class="btn btn-success" asp-action="Migrate">Tạo Db (Cập nhật Migration)</button>
    </form>
}

@if(can_connect) {
    <h2>Các Table</h2>
    @* Mở ra kết nối *@
    await dbContext.Database.OpenConnectionAsync();
    var table = dbContext.Database.GetDbConnection().GetSchema("Tables");
    <ul>
        @foreach(System.Data.DataRow row in table.Rows) {
            <li>@row["TABLE_NAME"]</li>
        }
    </ul>

    <a class="btn btn-danger" asp-action="DeleteDb">Xóa Database: @dbname</a>
}